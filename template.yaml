AWSTemplateFormatVersion: '2010-09-09'
Transform: 
  - AWS::Serverless-2016-10-31
Description: >
  ipv-identity-reuse-service

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    Tracing: Active
    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON
  Api:
    TracingEnabled: true

Resources:
  ExperimentLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: ./node_modules
      CompatibleRuntimes:
        - nodejs22.x

  # ExperimentApi:
  #   Type: AWS::Serverless::Api
  #   Properties:
  #     StageName: v1
  #     MethodSettings:
  #       - ResourcePath: /
  #         HttpMethod: GET
  #         CachingEnabled: false

  GovUKAssetsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub experimentgovassets-${AWS::StackName}

  ExperimentApi:
    Type: AWS::ApiGateway::RestApi

  AssetsFolder:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref ExperimentApi
      ParentId: !GetAtt ExperimentApi.RootResourceId
      PathPart: "{folder}"

  AssetsItem:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref ExperimentApi
      ParentId: !Ref AssetsFolder
      PathPart: "{item+}"

  AssetsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref ExperimentApi
      ResourceId: !Ref AssetsItem
      HttpMethod: GET
      AuthorizationType: NONE
      RequestParameters:
        method.request.path.item: true
        method.request.path.folder: true
      MethodResponses:
        - StatusCode: "200"
          ResponseParameters:
            'method.response.header.Timestamp': true
            'method.response.header.Content-Length': true
            'method.response.header.Content-Type': true
            'method.response.header.Cache-Control': true
      Integration:
        Type: AWS
        IntegrationHttpMethod: GET
        Credentials: !GetAtt AssetsResourceS3Role.Arn
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:s3:path/experimentgovassets-${AWS::StackName}/{folder}/{item}
        PassthroughBehavior: WHEN_NO_MATCH
        RequestParameters:
          integration.request.path.folder: method.request.path.folder
          integration.request.path.item: method.request.path.item
        IntegrationResponses:
        - StatusCode: "200"
          ResponseParameters:
            'method.response.header.Timestamp': 'integration.response.header.Date'
            'method.response.header.Content-Length': 'integration.response.header.Content-Length'
            'method.response.header.Content-Type': 'integration.response.header.Content-Type'
            'method.response.header.Cache-Control': "'public, max-age=10'"
      
  AssetsResourceS3Role:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - apigateway.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"

  ExperimentFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: "."
      Handler: experiment.lambdaHandler
      Runtime: nodejs22.x
      Architectures:
        - arm64
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /
            Method: get
            RestApiId: !Ref ExperimentApi
      Layers:
        - !Ref ExperimentLayer
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - src/handlers/experiment.ts
        Target: es2022
        Minify: true
        Sourcemap: true
        External:
          - govuk-frontend
