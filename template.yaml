AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Core components for the Identity Reuse Service

Parameters:
  Environment:
    Type: String
    AllowedValues:
      - local
      - dev
      - build
      - staging
      - integration
      - production
    Default: local

  ApplicationName:
    Description: The name of the application
    Type: String
    Default: id-reuse-service

  ApplicationConfigName:
    Description: The name of the applications configuration
    Type: String
    Default: id-reuse-config

  OwnerTagValue:
    Description: Value for the Owner Tag
    Type: String
    Default: trust_and_reuse@digital.cabinet-office.gov.uk

  ProductTagValue:
    Description: Value for the Product Tag
    Type: String
    Default: GOV.UK One Login

  SourceTagValue:
    Description: Value for the Source Tag
    Type: String
    Default: govuk-one-login/ipv-identity-reuse-service/template.yaml

  SystemTagValue:
    Description: Value for the System Tag
    Type: String
    Default: Re-use identity service

  CodeSigningConfigArn:
    Type: String
    Description: The ARN of the Code Signing Config to use, provided by the deployment pipeline
    Default: none

  PermissionsBoundary:
    Type: String
    Description: The ARN of the permissions boundary to apply to any role created by the template
    Default: none

  VpcStackName:
    Description: VPC Stack name
    Type: String
    Default: none

  DynatraceNodeLayerArn:
    Type: String
    Description: The ARN of the OneAgent Node layer for Lambda Node functions
    Default: "arn:aws:lambda:eu-west-2:216552277552:layer:Dynatrace_OneAgent_1_289_2_20240322-044523_with_collector_nodejs:1"

  LogGroupRetentionInDays:
    Description: The number of days a log group should retain logs
    Type: Number
    MinValue: "1"
    Default: "30"

  LambdaDeploymentPreference:
    Description: "Specifies the configuration to enable gradual Lambda deployments."
    Type: String
    Default: "AllAtOnce"
    AllowedValues:
      - AllAtOnce
      - Canary10Percent5Minutes
      - Canary10Percent10Minutes
      - Canary10Percent15Minutes
      - Canary10Percent30Minutes
      - Linear10PercentEvery10Minutes
      - Linear10PercentEvery1Minute
      - Linear10PercentEvery2Minutes
      - Linear10PercentEvery3Minutes
      - LambdaCanary50Percent5Minutes

  SharedStackName:
    Description: The name of the Identity Reuse Service Shared Stack
    Type: String
    Default: reuse-identity-shared

  MainCloudWatchMetricNamespace:
    Description: The name of the metric namespace
    Type: String
    Default: IdentityReuseService

Mappings:
  EnvironmentMap:
    "local":
      txmaAccountId: "275907361037"
      dynatraceSecretArn: "arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables"
      messageQueueArn: "unused"
      messageQueueKeyArn: "unused"
    "dev":
      txmaAccountId: "275907361037"
      dynatraceSecretArn: "arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables"
      messageQueueArn: "unused"
      messageQueueKeyArn: "unused"
    "build":
      txmaAccountId: "779873699903"
      dynatraceSecretArn: "arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables"
      messageQueueArn: "unused"
      messageQueueKeyArn: "unused"
    "staging":
      txmaAccountId: "178023842775"
      dynatraceSecretArn: "arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables"
      messageQueueArn: "arn:aws:sqs:eu-west-2:178023842775:self-staging-EC-SQS-Output-Queue-identityreuse"
      messageQueueKeyArn: "arn:aws:kms:eu-west-2:178023842775:key/325458a5-de28-4c28-aaf0-678ebefb35ac"
    "integration":
      txmaAccountId: "729485541398"
      dynatraceSecretArn: "arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables"
      messageQueueArn: "arn:aws:sqs:eu-west-2:729485541398:self-integration-EC-SQS-Output-Queue-identityreuse"
      messageQueueKeyArn: "arn:aws:kms:eu-west-2:729485541398:key/c199c69c-7ce7-4a82-b5a7-b344c7ac04f5"
    "production":
      txmaAccountId: "451773080033"
      dynatraceSecretArn: "arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceProductionVariables"
      messageQueueArn: "arn:aws:sqs:eu-west-2:451773080033:self-production-EC-SQS-Output-Queue-identityreuse"
      messageQueueKeyArn: "arn:aws:kms:eu-west-2:451773080033:key/5b5d3a8e-cf70-49ca-bec8-b3a2e61ce770"

Conditions:
  UseCodeSigning:
    Fn::Not:
      - Fn::Equals:
          - !Ref CodeSigningConfigArn
          - none

  UsePermissionsBoundary:
    Fn::Not:
      - Fn::Equals:
          - !Ref PermissionsBoundary
          - none

  DynaTraceEnabled:
    Fn::Or:
      - Fn::Equals: [!Ref Environment, "build"]
      - Fn::Equals: [!Ref Environment, "staging"]
      - Fn::Equals: [!Ref Environment, "integration"]
      - Fn::Equals: [!Ref Environment, "production"]

  IsDev:
    Fn::Or:
      - Fn::Equals: [!Ref Environment, "local"]
      - Fn::Equals: [!Ref Environment, "dev"]

  IsDevOrBuild:
    Fn::Or:
      - Fn::Equals: [!Ref Environment, "local"]
      - Fn::Equals: [!Ref Environment, "dev"]
      - Fn::Equals: [!Ref Environment, "build"]

  UseVpc:
    Fn::Not:
      - Fn::Equals: [!Ref VpcStackName, "none"]

Globals:
  Function:
    MemorySize: 1024
    CodeUri: ./
    Runtime: nodejs20.x
    Environment:
      Variables:
        AWS_LAMBDA_EXEC_WRAPPER: !If [DynaTraceEnabled, "/opt/dynatrace", !Ref "AWS::NoValue"]
        DT_CONNECTION_AUTH_TOKEN: !If
          - DynaTraceEnabled
          - !Sub
            - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_AUTH_TOKEN}}"
            - SecretArn: !FindInMap [EnvironmentMap, !Ref Environment, dynatraceSecretArn]
          - !Ref "AWS::NoValue"
        DT_CONNECTION_BASE_URL: !If
          - DynaTraceEnabled
          - !Sub
            - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_BASE_URL}}"
            - SecretArn: !FindInMap [EnvironmentMap, !Ref Environment, dynatraceSecretArn]
          - !Ref "AWS::NoValue"
        DT_CLUSTER_ID: !If
          - DynaTraceEnabled
          - !Sub
            - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CLUSTER_ID}}"
            - SecretArn: !FindInMap [EnvironmentMap, !Ref Environment, dynatraceSecretArn]
          - !Ref "AWS::NoValue"
        DT_LOG_COLLECTION_AUTH_TOKEN: !If
          - DynaTraceEnabled
          - !Sub
            - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_LOG_COLLECTION_AUTH_TOKEN}}"
            - SecretArn: !FindInMap [EnvironmentMap, !Ref Environment, dynatraceSecretArn]
          - !Ref "AWS::NoValue"
        DT_TENANT: !If
          - DynaTraceEnabled
          - !Sub
            - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_TENANT}}"
            - SecretArn: !FindInMap [EnvironmentMap, !Ref Environment, dynatraceSecretArn]
          - !Ref "AWS::NoValue"
        DT_OPEN_TELEMETRY_ENABLE_INTEGRATION: !If [DynaTraceEnabled, "true", !Ref "AWS::NoValue"]
    CodeSigningConfigArn: !If
      - UseCodeSigning
      - !Ref CodeSigningConfigArn
      - !Ref AWS::NoValue
    PermissionsBoundary: !If
      - UsePermissionsBoundary
      - !Ref PermissionsBoundary
      - !Ref AWS::NoValue
    VpcConfig: !If
      - UseVpc
      - SecurityGroupIds:
          - Fn::ImportValue: !Sub "${VpcStackName}-AWSServicesEndpointSecurityGroupId"
        SubnetIds:
          - Fn::ImportValue: !Sub "${VpcStackName}-PrivateSubnetIdA"
          - Fn::ImportValue: !Sub "${VpcStackName}-PrivateSubnetIdB"
      - !Ref "AWS::NoValue"
    Tracing: Active
    AutoPublishAlias: live
    Layers: !If
      - DynaTraceEnabled
      - - !Ref DynatraceNodeLayerArn
      - !Ref AWS::NoValue
    DeploymentPreference:
      Type: !Ref LambdaDeploymentPreference
      Role: !GetAtt CodeDeployServiceRole.Arn

Resources:
  MessageProcessorLambda:
    Type: AWS::Serverless::Function
    # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
    # checkov:skip=CKV_AWS_116: DLQs are not used for synchronous invocations.
    # checkov:skip=CKV_AWS_173: Check encryption settings for Lambda environmental variable
    Properties:
      FunctionName: !Sub "${AWS::StackName}-MessageProcessorLambda"
      Description: Logs passed in VCs
      Handler: message-processor.handler
      Role: !GetAtt MessageProcessorLambdaTriggerRole.Arn
      Environment:
        Variables:
          POWERTOOLS_METRICS_NAMESPACE:
            !If [IsDev, !Sub "${AWS::StackName}-TXMAMessageProcessor", "TXMAMessageProcessor"]
          POWERTOOLS_SERVICE_NAME: "MessagesReceived"
          EVCS_API_KEY_SECRET_ARN:
            Fn::ImportValue: !Sub "${SharedStackName}-EVCSApiKeySecret"
          ENVIRONMENT: !If [IsDev, "dev", !Ref Environment]
          APP_CONFIG_NAME: !Ref ApplicationConfigName
          APP_CONFIG_APPLICATION: !Ref ApplicationName
          SQS_AUDIT_EVENT_QUEUE_URL: !Ref AuditEventQueue
      Tags:
        Product: !Ref ProductTagValue
        System: !Ref SystemTagValue
        Environment: !Ref Environment
        Owner: !Ref OwnerTagValue
        Source: !Ref SourceTagValue
        Name: !Sub "${AWS::StackName}-SecretsManagerEncryptionKey"
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - src/message-processor/message-processor.ts
        Sourcemap: true
        Target: "es2024"

  MessageProcessorLambdaTriggerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}-MessageProcessorLambdaTriggerRole"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue
        - Key: Name
          Value: !Sub "${AWS::StackName}-MessageProcessorLambdaTriggerRole"

  MessageProcessorLambdaTriggerPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub "${AWS::StackName}-MessageProcessorLambdaTriggerPolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - sqs:ReceiveMessage
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
            Resource: !If
              - IsDevOrBuild
              - !GetAtt StubQueue.Arn
              - !FindInMap [EnvironmentMap, !Ref Environment, messageQueueArn]
          - Effect: Allow
            Action:
              - sqs:SendMessage
            Resource:
              - !GetAtt AuditEventQueue.Arn
          - Effect: Allow
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey
            Resource: !If
              - IsDevOrBuild
              - !GetAtt StubQueueKey.Arn
              - !FindInMap [EnvironmentMap, !Ref Environment, messageQueueKeyArn]
          - Effect: Allow
            Action:
              - "secretsmanager:GetSecretValue" #pragma: allowlist secret
            Resource:
              - Fn::ImportValue: !Sub "${SharedStackName}-EVCSApiKeySecret"
          - Effect: Allow
            Action:
              - "kms:*"
            Resource: "*"
          - Effect: Allow
            Action:
              - "appconfig:StartConfigurationSession"
              - "appconfig:GetLatestConfiguration"
            Resource: "*"
      Roles:
        - !Ref MessageProcessorLambdaTriggerRole

  MessageProcessorLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${AWS::StackName}-MessageProcessorLambda"
      RetentionInDays: !Ref LogGroupRetentionInDays
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  MessageProcessorLambdaErrorMetric:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: '{ $.level = "ERROR"}'
      LogGroupName: !Ref MessageProcessorLambdaLogGroup
      MetricTransformations:
        - MetricName: !Sub "${MessageProcessorLambda}-LambdaError"
          MetricNamespace: !Ref MainCloudWatchMetricNamespace
          MetricValue: "1"

  LoggingKmsKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: !Sub "logs.${AWS::Region}.amazonaws.com"
            Action:
              - "kms:Encrypt*"
              - "kms:Decrypt*"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:Describe*"
            Resource: "*"
            Condition:
              ArnLike:
                "kms:EncryptionContext:aws:logs:arn": !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
          - Effect: Allow
            Principal:
              Service: !Sub cloudwatch.amazonaws.com
            Action: kms:*
            Resource: "*"
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue
        - Key: Name
          Value: !Sub "${AWS::StackName}-LoggingKmsKey"

  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRoleForLambda
      PermissionsBoundary: !If [UsePermissionsBoundary, !Ref PermissionsBoundary, !Ref AWS::NoValue]
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue
        - Key: Name
          Value: !Sub "${AWS::StackName}-CodeDeployServiceRole"

  StubQueueKey:
    Type: AWS::KMS::Key
    Condition: IsDevOrBuild
    Properties:
      Description: KMS key for encrypting SQS messages
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"

  AuditEventQueue:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: !Ref AuditEventQueueEncryptionKeyAlias
      VisibilityTimeout: 70
      MessageRetentionPeriod: 1209600
      RedriveAllowPolicy:
        redrivePermission: denyAll
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt AuditEventDeadLetterQueue.Arn
        maxReceiveCount: 10

  AuditEventDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: !Ref AuditEventQueueEncryptionKeyAlias

  AuditEventQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref AuditEventQueue
      PolicyDocument:
        Statement:
          - Sid: "AllowReadByTxMAAccount"
            Effect: Allow
            Action:
              - "sqs:ChangeMessageVisibility"
              - "sqs:DeleteMessage"
              - "sqs:GetQueueAttributes"
              - "sqs:ReceiveMessage"
            Resource: !GetAtt AuditEventQueue.Arn
            Principal:
              AWS: !FindInMap [EnvironmentMap, !Ref Environment, txmaAccountId]

  AuditEventQueueEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Symmetric key used to encrypt audit messages at rest in SQS
      EnableKeyRotation: true
      KeySpec: SYMMETRIC_DEFAULT
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Sid: Enable Root access
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - "kms:*"
            Resource: "*"
          - Sid: Allow decryption of events by TxMA
            Effect: Allow
            Principal:
              AWS: !FindInMap [EnvironmentMap, !Ref Environment, txmaAccountId]
            Action:
              - "kms:decrypt"
            Resource: "*"
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub "${AWS::StackName}-AuditEventQueueEncryptionKey"
        - Key: Stack
          Value: !Sub "${AWS::StackName}"

  AuditEventQueueEncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !If
        - IsDev
        - !Sub "alias/${AWS::StackName}/auditEventQueueEncryptionKey"
        - !Sub "alias/${Environment}/auditEventQueueEncryptionKey"
      TargetKeyId: !Ref AuditEventQueueEncryptionKey

  StubQueue:
    Type: AWS::SQS::Queue
    Condition: IsDevOrBuild
    Properties:
      QueueName: !Sub "${AWS::StackName}-stub-queue"
      KmsMasterKeyId: !Ref StubQueueKey

  MessageProcessorLambdaTrigger:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 1
      EventSourceArn: !If
        - IsDevOrBuild
        - !GetAtt StubQueue.Arn
        - !FindInMap [EnvironmentMap, !Ref Environment, messageQueueArn]
      FunctionName: !GetAtt MessageProcessorLambda.Arn
      Enabled: true

  AuditEventDeadLetterQueueAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: "Triggers when any message is in the DLQ"
      Namespace: "AWS/SQS"
      MetricName: "ApproximateNumberOfMessagesVisible"
      Dimensions:
        - Name: QueueName
          Value: !Ref AuditEventDeadLetterQueue
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      Threshold: 0
      ComparisonOperator: GreaterThanThreshold
      AlarmActions:
        - !ImportValue alerting-integration-AlertNotificationTopicArn
      TreatMissingData: notBreaching
